/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    combos {
        compatible = "zmk,combos";

        ene {
            bindings = <&kp N>;
            key-positions = <30 37 21>;
            timeout-ms = <30>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB           &kp Q  &kp W  &kp E             &kp R           &kp T        &kp Y      &kp U  &kp I         &kp O    &kp P     &kp BSPC
&mt LEFT_GUI ESC  &kp A  &kp S  &kp D             &kp F           &kp G        &kp H      &kp J  &kp K         &kp L    &kp SEMI  &kp SQT
&kp LSHFT         &kp Z  &kp X  &kp C             &kp V           &kp B        &kp N      &kp M  &kp COMMA     &kp DOT  &kp FSLH  &mt RIGHT_SHIFT ENTER
                                &kp LEFT_CONTROL  &lt 1 LEFT_ALT  &kp SPACE    &kp SPACE  &mo 2  &kp LEFT_ALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB           &kp N1             &kp N2           &kp N3             &kp N4      &kp N5        &kp N6    &kp N7    &kp N8    &kp N9     &kp N0  &kp DEL
&kp LEFT_CONTROL  &kp K_VOLUME_DOWN  &kp C_VOLUME_UP  &kp K_PREVIOUS     &kp C_PLAY  &kp C_NEXT    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans  &kp INS
&kp LSHFT         &bt BT_SEL 0       &bt BT_NXT       &trans             &trans      &trans        &trans    &trans    &trans    &trans     &trans  &bt BT_CLR
                                                      &kp RIGHT_CONTROL  &trans      &kp ENTER     &kp RET   &mo 3     &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL     &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans       &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &kp K_SLEEP  &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                                &kp LGUI  &mo 3     &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };

        numpad {
            bindings = <
&out OUT_TOG  &kp F1   &kp F2   &kp F3  &kp F4  &kp F5      &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &trans      &trans  &kp LOCKING_NUM
&out OUT_BLE  &kp F6   &kp F7   &kp F8  &kp F9  &kp F10     &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &trans      &trans  &sys_reset
&out OUT_USB  &kp F11  &kp F12  &trans  &trans  &kp CAPS    &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PERIOD  &trans  &trans
                                &trans  &trans  &trans      &trans           &trans           &kp KP_NUMBER_0
            >;
        };
    };
};
